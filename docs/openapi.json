{
  "openapi": "3.0.2",
  "info": {
    "title": "Pixelarium API",
    "description": "The Infinite Pixels Experience.",
    "version": "1.0",
    "license": {
      "name": "MIT license",
      "url": "https://opensource.org/license/mit/"
    },
    "contact": {
      "name": "Kadek Nova (ItsNvaa)",
      "email": "kadeknovacahayaputra@gmail.com"
    }
  },
  "servers": [
    { "url": "http://localhost:8000", "description": "Development" },
    { "url": "http://localhost:8000", "description": "Staging" },
    { "url": "https://api.pixelarium.com", "description": "Production" }
  ],
  "paths": {
    "/v1/users/{name}": {
      "summary": "Get Single User API Endpoint",
      "description": "This endpoint provide you to get single user data",
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "deprecated": false,
          "allowEmptyValue": false,
          "description": "Value of existing username",
          "required": true,
          "schema": {
            "deprecated": false,
            "type": "string",
            "nullable": false
          }
        }
      ],
      "get": {
        "operationId": "singleUser",
        "summary": "Get Single User",
        "description": "This endpoint provide you to get single user data",
        "callbacks": {},
        "deprecated": false,
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "user": {
                    "id": 2,
                    "provider_id": 130564362,
                    "name": "ItsNvaa",
                    "email": null,
                    "bio": "wleee",
                    "picture": "http://127.0.0.1:49291/img/users/profiles/pictures/96d2e1a01cec3ba3eedd59cdacdfe5cb.avif",
                    "type": "User",
                    "site_admin": false,
                    "createdAt": "2023-12-12T02:11:42.773Z",
                    "updatedAt": "2023-12-12T02:48:46.484Z"
                  },
                  "status": "OK"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}": {
      "delete": {
        "operationId": "deleteUser",
        "summary": "Delete Existing User",
        "description": "Provide You to Delete Existing User",
        "tags": ["Users"],
        "deprecated": false,
        "security": [
          {
            "Authentication": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "User ID",
            "allowEmptyValue": false,
            "deprecated": false,
            "in": "path",
            "required": true,
            "schema": {
              "deprecated": false,
              "type": "integer",
              "description": "Value of existing user ID",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "deleted": true,
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateUser",
        "summary": "Update Existing User",
        "description": "Provide You to Update Existing User",
        "tags": ["Users"],
        "deprecated": false,
        "parameters": [
          {
            "name": "id",
            "description": "User ID",
            "allowEmptyValue": false,
            "deprecated": false,
            "in": "path",
            "required": true,
            "schema": {
              "deprecated": false,
              "type": "integer",
              "description": "Value of existing user ID",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "updated": true,
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unprocessable Content",
                  "messege": "The name has already taken",
                  "status": "KO"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Update User Field Payload",
          "content": {
            "application/json": {
              "example": {
                "name": "ItsNvaa (Updated)",
                "picture": "https://i.ibb.co/vC9jN2s/IMG-mths7.jpg",
                "bio": "The real losers is you..."
              }
            }
          },
          "required": false
        }
      }
    },
    "/v1/auth/google": {
      "summary": "Google OAuth Authentication",
      "description": "Login/register with Google",
      "get": {
        "operationId": "loginWihGoogle",
        "summary": "Google OAuth Authentication",
        "description": "Login with Google",
        "deprecated": false,
        "tags": ["Authentication"],
        "callbacks": {
          "OnSuccess": {
            "{$client_url}/auth/login": {
              "summary": "Callback after on success login",
              "description": "Callback to notify about successful login",
              "get": {
                "deprecated": false,
                "summary": "Callback after on success login",
                "parameters": [
                  {
                    "name": "token",
                    "in": "query",
                    "description": "JWT Token callback",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "type",
                    "in": "query",
                    "description": "Type callback",
                    "required": true,
                    "schema": {
                      "enum": ["success", "failed"],
                      "type": "string"
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "302": {
            "description": "Redirect to Login Pages",
            "headers": {
              "Location": {
                "description": "The URL to redirect to http://localhost:3000/auth/login (Client Side)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Redirect/Success",
            "headers": {
              "Location": {
                "description": "The URL to redirect to http://localhost:3000/auth/login/callback (Client Side)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/github": {
      "summary": "Github OAuth Authentication",
      "description": "Login/register with Github",
      "get": {
        "tags": ["Authentication"],
        "operationId": "loginWithGithub",
        "deprecated": false,
        "summary": "Github OAuth Authentication",
        "callbacks": {
          "OnSuccess": {
            "{$client_url}/auth/login": {
              "summary": "Callback after on success login",
              "description": "Callback to notify about successful login",
              "get": {
                "deprecated": false,
                "summary": "Callback after on success login",
                "parameters": [
                  {
                    "name": "token",
                    "in": "query",
                    "description": "JWT Token callback",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "type",
                    "in": "query",
                    "description": "Type callback",
                    "required": true,
                    "schema": {
                      "enum": ["success", "failed"],
                      "type": "string"
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Redirect/Success",
            "headers": {
              "Location": {
                "description": "The URL to redirect to http://localhost:3000/auth/login/callback (Client Side)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "The Login Session Was Failed.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/logout": {
      "summary": "Logout User Authentication",
      "description": "User Logout",
      "post": {
        "summary": "Logout User Authentication",
        "operationId": "logoutUser",
        "deprecated": false,
        "tags": ["Authentication"],
        "parameters": [
          {
            "name": "session",
            "in": "cookie",
            "allowEmptyValue": false,
            "deprecated": false,
            "required": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..",
            "schema": {
              "type": "string",
              "deprecated": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "logout": true,
                  "status": "OK"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unauthorized",
                  "messege": "The Logout Session was Failed.",
                  "status": "KO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/token": {
      "summary": "Refresh Token Rotation",
      "get": {
        "summary": "Refresh Token Rotation",
        "operationId": "tokenRotation",
        "deprecated": false,
        "tags": ["Authentication"],
        "parameters": [
          {
            "name": "session",
            "in": "cookie",
            "allowEmptyValue": false,
            "deprecated": false,
            "required": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..",
            "schema": {
              "type": "string",
              "deprecated": false
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unauthorized",
                  "messege": "The user must be login first!",
                  "status": "KO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unprocessable Content",
                  "messege": "The refresh token is invalid!",
                  "status": "KO"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/client-key/generate": {
      "summary": "Generate Client Secrect key",
      "post": {
        "summary": "Generate Client Secrect key",
        "operationId": "generateSecretKey",
        "tags": ["Client Keys"],
        "deprecated": false,
        "security": [
          {
            "Authentication": []
          }
        ],
        "parameters": [
          {
            "name": "session",
            "in": "cookie",
            "allowEmptyValue": false,
            "deprecated": false,
            "required": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..",
            "schema": {
              "type": "string",
              "deprecated": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "created": true,
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unprocessable Content",
                  "messege": "The must be login first!",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/client-key": {
      "summary": "Remove Existing Secrect Client User Key",
      "delete": {
        "operationId": "removeClientKey",
        "deprecated": false,
        "tags": ["Client Keys"],
        "summary": "Remove Existing Secrect Client User Key",
        "security": [
          {
            "Authentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "deleted": true,
                  "status": "OK"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unprocessable Content",
                  "messege": "The must be login first!",
                  "status": "KO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "session",
            "in": "cookie",
            "allowEmptyValue": false,
            "deprecated": false,
            "required": true,
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..",
            "schema": {
              "type": "string",
              "deprecated": false
            }
          }
        ]
      }
    },
    "/v1/client-key/{name}": {
      "summary": "Get Secrect Client User Key",
      "get": {
        "summary": "Get Secrect Client User Key",
        "operationId": "getClientSecret",
        "deprecated": false,
        "tags": ["Client Keys"],
        "security": [
          {
            "Authentication": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "allowEmptyValue": false,
            "deprecated": false,
            "required": true,
            "example": "ItsNvaa",
            "schema": {
              "type": "string",
              "deprecated": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "client_id": "pxlmid-dcecad2f74326893cbadc...",
                  "client_secret": "0d375c317aa0ea970ded0b1e6bc5d889f657d81...",
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/galleries": {
      "summary": "Galleries",
      "post": {
        "summary": "Add Gallery",
        "operationId": "addGallery",
        "tags": ["Galleries"],
        "deprecated": false,
        "requestBody": {
          "required": true,
          "description": "Request Body",
          "content": {
            "application/json": {
              "example": {
                "title": "This is title.",
                "pictures": "Files Upload Pictures"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "created": true,
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unprocessable Content",
                  "messege": "The image file size must be less than 5mb.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/galleries/{name}": {
      "get": {
        "summary": "Get Single Gallery",
        "deprecated": false,
        "operationId": "singleGallery",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "allowEmptyValue": false,
            "required": true,
            "deprecated": false,
            "description": "Existing username",
            "schema": {
              "deprecated": false,
              "type": "integer"
            }
          }
        ],
        "tags": ["Galleries"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "gallery": [],
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/galleries/{id}": {
      "summary": "Gallery",
      "patch": {
        "summary": "Update Gallery",
        "deprecated": false,
        "operationId": "updateGallery",
        "tags": ["Galleries"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "allowEmptyValue": false,
            "required": true,
            "deprecated": false,
            "description": "Existing user ID",
            "schema": {
              "deprecated": false,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Request Body",
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "picture": "...."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "updated": true,
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unprocessable Content",
                  "messege": "The image file size must be less than 5mb.",
                  "status": "KO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteGallery",
        "deprecated": false,
        "tags": ["Galleries"],
        "summary": "Delete Existing Gallery",
        "security": [{ "Authentication": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "allowEmptyValue": false,
            "required": true,
            "deprecated": false,
            "description": "Existing user ID",
            "schema": {
              "deprecated": false,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "deleted": true,
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/albums/{name}": {
      "summary": "Get Single Existing Album",
      "get": {
        "deprecated": false,
        "operationId": "singleAlbum",
        "summary": "Get Single Existing Album",
        "tags": ["Albums"],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "allowEmptyValue": false,
            "required": true,
            "deprecated": false,
            "description": "Existing username",
            "schema": {
              "deprecated": false,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "albums": [],
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/albums/{id}": {
      "delete": {
        "summary": "Delete Existing User Album",
        "deprecated": false,
        "tags": ["Albums"],
        "operationId": "deleteAlbum",
        "security": [{ "Authentication": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "allowEmptyValue": false,
            "required": true,
            "deprecated": false,
            "description": "Existing user ID",
            "schema": {
              "deprecated": false,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "deleted": true,
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Albums"],
        "deprecated": false,
        "operationId": "updateAlbum",
        "summary": "Update Existing User Album",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "allowEmptyValue": false,
            "required": true,
            "deprecated": false,
            "description": "Existing user ID",
            "schema": {
              "deprecated": false,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "updated": true,
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unprocessable Content",
                  "messege": "The image file size must be less than 5mb.",
                  "status": "KO"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "title": "This is a title (Updated)",
                "picture": "...."
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/albums": {
      "summary": "Add Album",
      "post": {
        "summary": "Add Album",
        "tags": ["Albums"],
        "deprecated": false,
        "operationId": "addAlbum",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "allowEmptyValue": false,
            "required": true,
            "deprecated": false,
            "description": "Existing user ID",
            "schema": {
              "deprecated": false,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "title": "This is a title",
                "description": "This is a description",
                "picture": "...."
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "created": true,
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unprocessable Content",
                  "messege": "The image file size must be less than 5mb.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscription/prices": {
      "summary": "Get All List Prices",
      "get": {
        "deprecated": false,
        "operationId": "subscriptionPrices",
        "summary": "Get All List Prices",
        "tags": ["Subscriptions"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "lists": [],
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscription/payments/tokenizer": {
      "summary": "Pixelarium Payments Plans",
      "post": {
        "deprecated": false,
        "summary": "Pixelarium Payments Plans",
        "operationId": "tokenizer",
        "tags": ["Subscriptions"],
        "security": [{ "Authentication": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "transactionDetails": {
                  "orderId": "Pixelarium OrderID",
                  "grossAmount": 145000
                },
                "item_details": [
                  {
                    "id": "UUID",
                    "price": 145000,
                    "name": "Diamond Plans",
                    "quantity": 1
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "token": "66e4fa55-fdac-4ef9-91b5-733b97d1b862",
                  "redirect_url": "https://app.sandbox.midtrans.com/snap/v2/vtweb/66e4fa55-fdac-4ef9-91b5-733b97d1b862",
                  "status": "OK"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unauthorized",
                  "messege": "The user must be login first!",
                  "status": "KO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscription/payments/callback": {
      "summary": "Payments Callback Url",
      "get": {
        "operationId": "paymentsCallback",
        "summary": "Payments Callbacks",
        "deprecated": false,
        "tags": ["Subscriptions"],
        "security": [{ "Authentication": [] }],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "allowEmptyValue": false,
            "required": true,
            "deprecated": false,
            "description": "Transaction Types",
            "schema": {
              "deprecated": false,
              "type": "string",
              "enum": ["success", "failed"]
            }
          },
          {
            "name": "order_id",
            "in": "query",
            "allowEmptyValue": true,
            "required": false,
            "deprecated": false,
            "description": "Order Id",
            "schema": {
              "deprecated": false,
              "type": "string"
            }
          },
          {
            "name": "status_code",
            "in": "query",
            "allowEmptyValue": false,
            "required": true,
            "deprecated": false,
            "description": "Transaction Status Code",
            "schema": {
              "deprecated": false,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Redirect/Success",
            "headers": {
              "Location": {
                "description": "The URL to redirect to http://localhost:3000/payments/finished?order_id=.... (Client Side)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Failed",
            "headers": {
              "Location": {
                "description": "The URL to redirect to http://localhost:3000/payments/failed?order_id=..... (Client Side)",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unauthorized",
                  "messege": "The user must be login first!",
                  "status": "KO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscription/deactive/{name}": {
      "summary": "Deactive User Subscription",
      "delete": {
        "deprecated": false,
        "summary": "Deactive User Subscription",
        "operationId": "deactiveSubscription",
        "tags": ["Subscriptions"],
        "security": [{ "Authentication": [] }],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "allowEmptyValue": false,
            "required": true,
            "deprecated": false,
            "description": "Existing username",
            "schema": {
              "deprecated": false,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "deactivated": true,
                  "status": "OK"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unauthorized",
                  "messege": "The user must be login first!",
                  "status": "KO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscription/active/{name}": {
      "summary": "Active User Subscription",
      "post": {
        "deprecated": false,
        "summary": "Active User Subscription",
        "operationId": "activeSubscription",
        "tags": ["Subscriptions"],
        "security": [{ "Authentication": [] }],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "allowEmptyValue": false,
            "required": true,
            "deprecated": false,
            "description": "Existing username",
            "schema": {
              "deprecated": false,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "status": "OK",
                "subscription": {
                  "plan": "Diamond",
                  "intervalCount": 1
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "activated": true,
                  "status": "OK"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Unauthorized",
                  "messege": "The user must be login first!",
                  "status": "KO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscription/status/{name}": {
      "summary": "Subscription Status",
      "get": {
        "deprecated": false,
        "summary": "Subscription Status",
        "operationId": "subscriptionStatus",
        "tags": ["Subscriptions"],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "allowEmptyValue": false,
            "required": true,
            "deprecated": false,
            "description": "Existing username",
            "schema": {
              "deprecated": false,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "subscription": {
                    "plan": "Diamond",
                    "activated": false
                  },
                  "status": "OK"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Bad Request",
                  "messege": "Oops! Your request cannot be processed due to a bad request. Please check your input and try again.",
                  "status": "KO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "TypeError": "Not Found",
                  "messege": "Oops! The data you are looking for could not be found.",
                  "status": "KO"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Authentication": {
        "scheme": "bearer",
        "bearerFormat": "Bearer",
        "description": "Authentication for User",
        "type": "http"
      }
    }
  }
}
